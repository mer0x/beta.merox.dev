[{"content":" Blog # If you’d like to support my work, you can BuyMeACoffee ","date":"2 October 2024","externalUrl":null,"permalink":"/blog/","section":"","summary":"\u003ch1 class=\"relative group\"\u003eBlog \n    \u003cdiv id=\"blog\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#blog\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e\n  \n  \n  \n  \n\n\n\n\u003cdiv\n  \n    class=\"flex px-4 py-3 rounded-md\"\n    style=\"background-color: #6C6443\"\n  \u003e\n\n  \u003cspan\n    \n      class=\"ltr:pr-3 rtl:pl-3 flex items-center\"\n      style=\"color: #1d3557\"\n    \u003e\n\n    \n\n  \u003cspan class=\"relative block icon\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\n\u003cpath fill=\"currentColor\" d=\"M88 0C74.7 0 64 10.7 64 24c0 38.9 23.4 59.4 39.1 73.1l1.1 1C120.5 112.3 128 119.9 128 136c0 13.3 10.7 24 24 24s24-10.7 24-24c0-38.9-23.4-59.4-39.1-73.1l-1.1-1C119.5 47.7 112 40.1 112 24c0-13.3-10.7-24-24-24zM32 192c-17.7 0-32 14.3-32 32V416c0 53 43 96 96 96H288c53 0 96-43 96-96h16c61.9 0 112-50.1 112-112s-50.1-112-112-112H352 32zm352 64h16c26.5 0 48 21.5 48 48s-21.5 48-48 48H384V256zM224 24c0-13.3-10.7-24-24-24s-24 10.7-24 24c0 38.9 23.4 59.4 39.1 73.1l1.1 1C232.5 112.3 240 119.9 240 136c0 13.3 10.7 24 24 24s24-10.7 24-24c0-38.9-23.4-59.4-39.1-73.1l-1.1-1C231.5 47.7 224 40.1 224 24z\"/\u003e\u003c/svg\u003e\n  \u003c/span\u003e\n\n\n  \u003c/span\u003e\n\n  \u003cspan\n    \n      style=\"color: #f1faee\"\n    \u003eIf you’d like to support my work, you can \u003ca href=\"https://buymeacoffee.com/merox.dev\" target=\"_blank\"\u003eBuyMeACoffee\u003c/a\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\u003cbr\u003e\u003c/p\u003e","title":"","type":"blog"},{"content":"","date":"2 October 2024","externalUrl":null,"permalink":"/tags/example/","section":"Tags","summary":"","title":"Example","type":"tags"},{"content":"","date":"2 October 2024","externalUrl":null,"permalink":"/tags/tag/","section":"Tags","summary":"","title":"Tag","type":"tags"},{"content":"","date":"2 October 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"an example to get you started\nThis is a heading # This is a subheading # This is a subsubheading # This is a subsubsubheading # This is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at [Blowfish documentation]finedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedfinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefined(https://blowfish.page/) undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefinedThis is a paragraph with bold and italic text. Check more at Blowfish documentation undefined\n","date":"2 October 2024","externalUrl":null,"permalink":"/blog/1727865116663-server/","section":"","summary":"I\u0026rsquo;ve decided to implement monitoring for my homelab through a cloud virtual machine. As cloud provider I\u0026rsquo;ve opted for Hetzner, but more on that in a future post.","title":"Tailscale site-to-site pfSense - Linux","type":"blog"},{"content":"Hello and welcome! 👋 Explore IT documentation, tech blog posts, and tutorials based on my 10+ years of hands-on experience ⤵\n","date":"2 October 2024","externalUrl":null,"permalink":"/","section":"Welcome to Merox.dev","summary":"\u003cp\u003eHello and welcome! 👋 Explore IT documentation, tech blog posts, and tutorials based on my \u003cb\u003e10+ years\u003c/b\u003e of hands-on experience ⤵\u003c/p\u003e","title":"Welcome to Merox.dev","type":"page"},{"content":" Automating My Smart Home Journey # ![header-media](/images/smarthomejourney.webp){ width=\"700\" } IoT Introduction # What started as a simple wish to control lights using my phone quickly turned into a fully integrated smart home setup. I’ve always been a bit lazy when it comes to getting up to switch things off manually, but once I discovered the potential of smart devices like Amazon Alexa and Home Assistant, I was hooked. Over time, I’ve expanded the system to include a wide range of devices that automate my entire home.\nDevices I Use # In my smart home setup, I’ve integrated several key devices:\nAmazon Alexa: I use Alexa in every room (living room, bedroom, kitchen) to control most devices via voice commands. Home Assistant: Running on a Dell server through a VM, Home Assistant is the central brain of my setup, managing more complex automations and scripts. Broadlink RM4 Pro: This acts as a bridge for RF and IR devices, allowing me to control roller blinds and non-smart appliances. Philips Hue \u0026amp; Goove Lights: These add mood lighting, often synchronized with specific routines like \u0026ldquo;movie time\u0026rdquo;. Roborock Vacuum, Resideo Thermostat, and air conditioning units. Smart Roller Blinds: Controlled through Broadlink using RF signals. In the near future, I plan to add cameras and a Yale smart lock. !!! info \u0026ldquo;Hue TV\u0026amp;Lights\u0026rdquo; { width=\u0026ldquo;600\u0026rdquo; } Alexa and Home Assistant # Initially, Alexa controlled most of the devices, but once I introduced Home Assistant, things got even more flexible. I now have full automation based on my location, weather conditions, and custom scripts. For example, when I leave the house, motion sensors activate, and all roller blinds close automatically. When I return, the system opens the blinds, adjusts the temperature based on the outside weather, and even turns on night lights to guide me through the dark.\nExample Automations # Morning and Night Routines # One of the key routines I rely on is Good Morning and Good Night, which create a seamless transition from sleep to waking and vice versa. These routines handle:\nOpening the blinds to a certain level in the morning to let in natural light. Shutting down all lights and closing the blinds in the evening to create the perfect environment for sleep. This automation has made mornings feel more natural and relaxing, and night routines are much more consistent without having to remember to switch everything off.\nMovie and Gaming Time # When it’s time for a movie or gaming session, I have created automations to handle the ambiance and setup:\nMovie Time: The blinds in the living room close, the TV turns on and switches to Netflix, the soundbar is set to a specific sound mode, and the air conditioning turns on if it’s summer. Additionally, the ambient lighting around the TV adjusts to create the perfect movie-watching environment. Gaming Time: Similar to Movie Time, but the TV connects to the PlayStation 5, and the lights adjust for a more immersive experience. !!! info \u0026ldquo;Alexa \u0026amp; Philips Hue screenshots\u0026rdquo; Security Setup # For security, my motion sensors automatically trigger when I leave, and I receive notifications via Alexa and Home Assistant if anything unusual happens. For instance, any significant changes in room temperature or other unexpected events will prompt alerts, helping me stay in control even when I’m away.\nTutorial: Integrating Broadlink with Alexa \u0026amp; RF Learning # Here’s a simple tutorial on how I used Broadlink RM4 Pro to integrate RF devices like my roller blinds with Alexa.\nStep 1: Set Up Broadlink RM4 Pro # Download the Broadlink app and follow the steps to connect the RM4 Pro to your Wi-Fi. Register an account and add the RM4 Pro device in the app. Step 2: Learn RF Signals # Select Add Remote in the Broadlink app, and choose \u0026ldquo;RF Appliance\u0026rdquo;. Use your original remote for the roller blinds, press the corresponding button while the app is in Learning Mode, and save the learned code. Test the new button to make sure it controls the blinds. Step 3: Connect Broadlink to Alexa # In the Alexa app, enable the Broadlink skill. Link your Broadlink account and let Alexa discover your RF devices. Now, you can use voice commands like, “Alexa, close the blinds,” and it will work seamlessly.\n!!! info \u0026ldquo;Broadlink screenshots\u0026rdquo; Challenges and Advanced Automations # The Most Challenging Part: Running Linux Scripts # One of the more challenging aspects was getting Home Assistant to correctly execute Linux scripts based on my GPS location. Using bash commands, I created scripts that adjust server fan speeds based on external temperatures when I leave or return home.\nFor example:\nWhen I’m away, the server fan speeds up to keep the system cool. Lights automatically adjust, and blinds close. When I come back, the system reverses these actions. ==/root/homeassistant/configuration.yaml==\n#!/bin/bash # Adjust server fan speed based on external temperature shell_command: set_fans_home: \u0026#39;ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=no root@10.10.10.10 /usr/bin/ipmitool -I lanplus -H 10.10.10.200 -U root -P SuperSecretPassword raw 0x30 0x30 0x02 0xff 0x14\u0026#39; set_fans_away: \u0026#39;ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=no root@10.10.10.10 /usr/bin/ipmitool -I lanplus -H 10.10.10.200 -U root -P SuperSecretPassword raw 0x30 0x30 0x02 0xff 0x28\u0026#39; ![header-media](/images/HAuto.png){ width=\"800\" } HA Automation Future Plans # In the near future, I plan to integrate more advanced routines based on my location and possibly automate the Yale smart lock to engage whenever I leave home. The ability to do this with a combination of Alexa and Home Assistant makes the whole process incredibly smooth.\nMore automations # Below, you can see more simple automations videos from my smart home\n=== \u0026ldquo;Balcony light\u0026rdquo;\n\u0026lt;center\u0026gt; \u0026lt;iframe width=\u0026quot;560\u0026quot; height=\u0026quot;315\u0026quot; src=\u0026quot;https://www.youtube.com/embed/l6i4DPdkLjc?si=dlezgkF_pDZsnxTx\u0026quot; title=\u0026quot;YouTube video player\u0026quot; frameborder=\u0026quot;0\u0026quot; allow=\u0026quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\u0026quot; referrerpolicy=\u0026quot;strict-origin-when-cross-origin\u0026quot; allowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;/center\u0026gt; === \u0026ldquo;Alexa start cleaning\u0026rdquo;\n\u0026lt;center\u0026gt;\u0026lt;iframe width=\u0026quot;560\u0026quot; height=\u0026quot;315\u0026quot; src=\u0026quot;https://www.youtube.com/embed/FoG73PS4eQU?si=KcRq9LK7e7zuAW8h\u0026quot; title=\u0026quot;YouTube video player\u0026quot; frameborder=\u0026quot;0\u0026quot; allow=\u0026quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\u0026quot; referrerpolicy=\u0026quot;strict-origin-when-cross-origin\u0026quot; allowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;/center\u0026gt; === \u0026ldquo;Kitchen sensor\u0026rdquo;\n\u0026lt;center\u0026gt;\u0026lt;iframe width=\u0026quot;560\u0026quot; height=\u0026quot;315\u0026quot; src=\u0026quot;https://www.youtube.com/embed/igOCmdXgi-c?si=LxcSTg1tMbDKJuYb\u0026quot; title=\u0026quot;YouTube video player\u0026quot; frameborder=\u0026quot;0\u0026quot; allow=\u0026quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\u0026quot; referrerpolicy=\u0026quot;strict-origin-when-cross-origin\u0026quot; allowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;/center\u0026gt; Conclusion # Building a smart home is an ongoing project, and with tools like Broadlink, Alexa, and Home Assistant, it’s more accessible than ever. Whether you’re just starting or already have a setup, there’s always room for improvement and more efficient automation. The beauty of smart home devices lies in how they can adapt to your personal routines and preferences, making everyday life a little easier.\nNice to check # :simple-youtube: Smart Home Solver YouTube Channel :simple-youtube: Grayson Adams YouTube Channel :simple-youtube: Smart Home Junkie YouTube Channel :simple-youtube: Everything Smart Home YouTube Channel ","date":"30 September 2024","externalUrl":null,"permalink":"/blog/smarthome-journey/","section":"","summary":"What started as a simple wish to control lights using my phone quickly turned into a fully integrated smart home setup.","title":"Automating My Smart Home Journey","type":"blog"},{"content":"","date":"30 September 2024","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"30 September 2024","externalUrl":null,"permalink":"/categories/configuration/","section":"Categories","summary":"","title":"Configuration","type":"categories"},{"content":"","date":"30 September 2024","externalUrl":null,"permalink":"/categories/server/","section":"Categories","summary":"","title":"Server","type":"categories"},{"content":"","date":"30 September 2024","externalUrl":null,"permalink":"/categories/smarthome/","section":"Categories","summary":"","title":"Smarthome","type":"categories"},{"content":"","date":"1 July 2024","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"1 July 2024","externalUrl":null,"permalink":"/authors/merox/","section":"Authors","summary":"","title":"Merox","type":"authors"},{"content":" Robert Melcher # HPC System Administrator # Seasoned System Administrator and Cybersecurity Engineer, with a profound passion for Linux, Networking, and Security. My career has been a journey through challenging roles, where I've developed a blend of technical prowess and strategic insight. Why merox.dev? # Well, \u0026ldquo;merox.dev\u0026rdquo; does have a personal touch and a little history. It\u0026rsquo;s a fusion of elements that reflect both my background and interests:\nMERO: The first part of the name comes from combining the first letters of my name, \u0026ldquo;ME\u0026rdquo; for Melcher and \u0026ldquo;RO\u0026rdquo; for Robert. This is sort of a wink toward my identity and a touch of personality within the work I do.\nThe \u0026ldquo;X\u0026rdquo; in \u0026ldquo;merox\u0026rdquo; adds some mystery and adaptability to the name. My username was originally based on hexadecimal notation—\u0026ldquo;mer0x39,\u0026rdquo; where \u0026ldquo;0x39\u0026rdquo; is the number 57, essentially the day and month of my birthday.\nThe idea of merox.dev was to create a full-scale repository including all my experience and knowledge gained within the last ten years working in IT. This site is my personal archive, containing from complex technical solutions to many experiences obtained during projects. A blog section is the newest part where I share my thoughts, trends, and updates on what\u0026rsquo;s new in tech.\nIn essence, merox.dev represents a bit of my path, expertise, and passion for IT; it provides useful resources and information to others within this industry.\nProfessional Journey # Throughout my career, I\u0026rsquo;ve had the privilege of working with industry leaders such as Hella, Atos, and Netex. These experiences have shaped my approach to IT and cybersecurity, allowing me to:\nSpearhead cutting-edge cybersecurity initiatives Optimize complex server environments Align IT strategies with organizational goals Key Achievements # 🐳 Successfully dockerized and migrated a Puppet server from a virtual machine to a Kubernetes cluster, enhancing scalability and resource efficiency 🖥️ Led the migration and creation of Forescout policies from Windows 7 to Windows 10, ensuring seamless transition and improved security posture 🛡️ Implemented robust security measures across various network devices including Palo Alto, Fortigate, Cisco, and McAfee, significantly enhancing the organization\u0026rsquo;s cybersecurity infrastructure 💾 Designed and implemented a comprehensive backup solution using Bareos for an entire datacenter, ensuring data integrity and disaster recovery readiness 🌐 Leveraged CCNA expertise to design and implement complex network infrastructures, optimizing performance and security 🚀 Orchestrated multiple infrastructure modernization projects, improving system reliability and operational efficiency Core Competencies # Linux Systems Networking Security System optimization Infrastructure design Threat analysis Shell scripting Network protocols Penetration testing Performance tuning Troubleshooting Security audits Philosophy \u0026amp; Continuous Learning # I believe in the power of continuous learning and staying ahead of the technological curve. My approach involves:\nConstantly exploring emerging technologies Participating in cybersecurity communities and forums Sharing knowledge through mentoring and tech talks Let\u0026rsquo;s Connect # Interested in collaborating or learning more about my work? I\u0026rsquo;m always open to discussing new opportunities and ideas in the world of IT and cybersecurity.\n","date":"1 July 2024","externalUrl":null,"permalink":"/about/","section":"Welcome to Merox.dev","summary":"Seasoned System Administrator and Cybersecurity Engineer, with a profound passion for Linux, Networking, and Security.","title":"Who's Merox?","type":"page"},{"content":"For a long time, I\u0026rsquo;ve been on the hunt for a comprehensive and well-crafted tutorial to deploy a media server on my Kubernetes cluster. This media server stack includes Jellyfin, Radarr, Sonarr, Jackett, and qBittorrent. Let\u0026rsquo;s briefly dive into what each component brings to our setup\nApplication Description Jellyfin An open-source media system that provides a way to manage and stream your media library across various devices. Radarr A movie collection manager for Usenet and BitTorrent users. It automates the process of searching for movies, downloading, and managing your movie library. Sonarr Similar to Radarr but for TV shows. It keeps track of your series, downloads new episodes, and manages your collection with ease. Jackett Acts as a proxy server, translating queries from other apps (like Sonarr or Radarr) into queries that can be understood by a wide array of torrent search engines. qBittorrent A powerful BitTorrent client that handles your downloads. Paired with Jackett, it streamlines finding and downloading media content. Gluetun A lightweight, open-source VPN client for Docker environments, supporting multiple VPN providers to secure and manage internet connections across containerized applications. It ensures privacy and seamless network security with easy configuration and integration. The configuration for these applications is hosted on Longhorn storage, ensuring resilience and ease of management, while the media (movies, shows, books, etc.) is stored on a Synology NAS DS223. The NAS location is utilized as a Persistent Volume (PV) through NFS 4.1 by Kubernetes.\nIn this tutorial, you\u0026rsquo;ll find the Kubernetes configuration for each necessary component to set up, install, and secure each service used by the media server.\nSynology NAS NFS Setup for Kubernetes # If you use Synology NAS, this is the rule I created for my NFS share which will be mounted on kubernetes side. Let\u0026rsquo;s start step by step.\nConfiguring PVC and PV for NFS Share # Media # Create nfs-media-pv-and-pvc.yaml:\napiVersion: v1 kind: PersistentVolume metadata: name: jellyfin-videos spec: capacity: storage: 400Gi accessModes: - ReadWriteOnce nfs: path: /volume1/server/k3s/media server: storage.merox.cloud persistentVolumeReclaimPolicy: Retain mountOptions: - hard - nfsvers=3 storageClassName: \u0026#34;\u0026#34; # Persistent Volume spec including capacity, access modes, NFS path, and server details follow --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: jellyfin-videos namespace: media spec: accessModes: - ReadWriteOnce resources: requests: storage: 400Gi volumeName: jellyfin-videos storageClassName: \u0026#34;\u0026#34; # Persistent Volume Claim spec including access modes, resources requests, and storage class name follow Apply with:\nkubectl apply -f nfs-media-pv-and-pvc.yaml Download # Create nfs-download-pv-and-pvc.yaml:\napiVersion: v1 kind: PersistentVolume metadata: name: qbitt-download spec: capacity: storage: 400Gi accessModes: - ReadWriteOnce nfs: path: /volume1/server/k3s/media/download server: storage.merox.cloud persistentVolumeReclaimPolicy: Retain mountOptions: - hard - nfsvers=3 storageClassName: \u0026#34;\u0026#34; # Persistent Volume spec including capacity, access modes, NFS path, and server details follow --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: qbitt-download namespace: media spec: accessModes: - ReadWriteOnce resources: requests: storage: 400Gi volumeName: qbitt-download storageClassName: \u0026#34;\u0026#34; # Persistent Volume Claim spec including access modes, resources requests, and storage class name follow Apply with:\nkubectl apply -f nfs-download-pv-and-pvc.yaml Configuring Longhorn PVC for Each Application # Create app-config-pvc.yaml:\napiVersion: v1 kind: PersistentVolumeClaim metadata: name: app # radarr for example namespace: media spec: accessModes: - ReadWriteOnce storageClassName: longhorn resources: requests: storage: 5Gi # Persistent Volume Claim spec including access modes, storage class name, and resources requests follow Apply with:\nkubectl apply -f app-config-pvc.yaml This type of configuration needs to be generated for each application: Jellyfin, Sonarr, Radarr, Jackett, qBittorrent. Deploying each application # Jellyfin # Jellyfin serves as our media streaming platform, providing access to movies, TV shows, and other media across various devices. Here\u0026rsquo;s how to deploy it\nCreate specific yaml for each file, for example: radarr-deployment.yaml Apply with\nkubectl apply -f radarr-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: jellyfin namespace: media spec: replicas: 1 selector: matchLabels: app: jellyfin template: metadata: labels: app: jellyfin spec: containers: - name: jellyfin image: jellyfin/jellyfin volumeMounts: - name: config mountPath: /config - name: videos mountPath: /data/videos ports: - containerPort: 8096 volumes: - name: config persistentVolumeClaim: claimName: jellyfin-config - name: videos persistentVolumeClaim: claimName: jellyfin-videos Sonarr # Sonarr automates TV show downloads, managing our series collection efficiently.\napiVersion: apps/v1 kind: Deployment metadata: name: sonarr namespace: media spec: replicas: 1 selector: matchLabels: app: sonarr template: metadata: labels: app: sonarr spec: containers: - name: sonarr image: linuxserver/sonarr env: - name: PUID value: \u0026#34;1057\u0026#34; - name: PGID value: \u0026#34;1056\u0026#34; volumeMounts: - name: config mountPath: /config - name: videos mountPath: /tv - name: downloads mountPath: /downloads ports: - containerPort: 8989 volumes: - name: config persistentVolumeClaim: claimName: sonarr-config - name: videos persistentVolumeClaim: claimName: jellyfin-videos - name: downloads persistentVolumeClaim: claimName: qbitt-download Radarr # Radarr works like Sonarr but focuses on movies, keeping our film library organized and up-to-date.\napiVersion: apps/v1 kind: Deployment metadata: name: radarr namespace: media spec: replicas: 1 selector: matchLabels: app: radarr template: metadata: labels: app: radarr spec: containers: - name: radarr image: linuxserver/radarr env: - name: PUID value: \u0026#34;1057\u0026#34; - name: PGID value: \u0026#34;1056\u0026#34; volumeMounts: - name: config mountPath: /config - name: videos mountPath: /movies - name: downloads mountPath: /downloads ports: - containerPort: 7878 volumes: - name: config persistentVolumeClaim: claimName: radarr-config - name: videos persistentVolumeClaim: claimName: jellyfin-videos - name: downloads persistentVolumeClaim: claimName: qbitt-download Jackett # Jackett acts as a bridge between torrent search engines and our media management tools, enhancing their capabilities.\napiVersion: apps/v1 kind: Deployment metadata: name: jackett namespace: media spec: replicas: 1 selector: matchLabels: app: jackett template: metadata: labels: app: jackett spec: containers: - name: jackett image: linuxserver/jackett env: - name: PUID value: \u0026#34;1057\u0026#34; - name: PGID value: \u0026#34;1056\u0026#34; volumeMounts: - name: config mountPath: /config ports: - containerPort: 9117 volumes: - name: config persistentVolumeClaim: claimName: jackett-config qBittorrent # apiVersion: apps/v1 kind: Deployment metadata: name: qbittorrent namespace: media spec: replicas: 1 selector: matchLabels: app: qbittorrent template: metadata: labels: app: qbittorrent spec: containers: - name: qbittorrent image: linuxserver/qbittorrent resources: limits: memory: \u0026#34;2Gi\u0026#34; requests: memory: \u0026#34;512Mi\u0026#34; env: - name: PUID value: \u0026#34;1057\u0026#34; - name: PGID value: \u0026#34;1056\u0026#34; volumeMounts: - name: config mountPath: /config - name: downloads mountPath: /downloads ports: - containerPort: 8080 volumes: - name: config persistentVolumeClaim: claimName: qbitt-config - name: downloads persistentVolumeClaim: claimName: qbitt-download qBittorrent with Gluetun # apiVersion: apps/v1 kind: Deployment metadata: name: qbittorrent namespace: media spec: replicas: 1 selector: matchLabels: app: qbittorrent template: metadata: labels: app: qbittorrent spec: containers: - name: qbittorrent image: linuxserver/qbittorrent resources: limits: memory: \u0026#34;2Gi\u0026#34; requests: memory: \u0026#34;512Mi\u0026#34; env: - name: PUID value: \u0026#34;1057\u0026#34; - name: PGID value: \u0026#34;1056\u0026#34; volumeMounts: - name: config mountPath: /config - name: downloads mountPath: /downloads ports: - containerPort: 8080 - name: gluetun image: qmcgaw/gluetun env: - name: VPNSP value: \u0026#34;protonvpn\u0026#34; - name: OPENVPN_USER valueFrom: secretKeyRef: name: protonvpn-secrets key: PROTONVPN_USER - name: OPENVPN_PASSWORD valueFrom: secretKeyRef: name: protonvpn-secrets key: PROTONVPN_PASSWORD - name: COUNTRY value: \u0026#34;Germany\u0026#34; securityContext: capabilities: add: - NET_ADMIN volumeMounts: - name: gluetun-config mountPath: /gluetun volumes: - name: config persistentVolumeClaim: claimName: qbitt-config - name: downloads persistentVolumeClaim: claimName: qbitt-download - name: gluetun-config persistentVolumeClaim: claimName: gluetun-config I\u0026rsquo;ve chosen to use ProtonVPN due to their security policy and because they do not collect/store data, but also because of the speeds and diverse settings, all at a very good price Creating ClusterIP Services # For our media server applications to communicate efficiently within the Kubernetes cluster without exposing them directly to the external network, we utilize ClusterIP services.\nTo set this up, we create a app-service.yaml for each application (taking Radarr as an example here):\ncreate app-service.yaml\napiVersion: v1 kind: Service metadata: name: app #radarr for example namespace: media spec: type: ClusterIP ports: - port: 80 targetPort: 7878 selector: app: app #radarr for example kubectl apply -f app-service.yaml Creating middleware for Traefik # For enhanced security and to ensure smooth functioning with Traefik, we define middleware:\nThe middleware, named default-headers-media, is configured in the media namespace. It sets various security headers, including XSS protection and options to prevent MIME sniffing, among others. Create default-headers-media.yaml\napiVersion: traefik.containo.us/v1alpha1 kind: Middleware metadata: name: default-headers-media namespace: media spec: headers: browserXssFilter: true contentTypeNosniff: true forceSTSHeader: true stsIncludeSubdomains: true stsPreload: true stsSeconds: 15552000 customFrameOptionsValue: SAMEORIGIN customRequestHeaders: X-Forwarded-Proto: https Apply with:\nkubectl apply -f default-headers-media.yaml Creating Ingress Route for Each Application # To expose each application securely, we create IngressRoutes using Traefik:\nAn IngressRoute for the application (such as Radarr) is defined, which uses the traefik-external ingress class. It listens on the websecure entry point and routes traffic based on the host (movies.merox.cloud in this example, replace with your domain). The middleware default-headers-media is applied to enhance security. TLS configuration is included, referencing a secret that contains the SSL/TLS certificate. Create app-ingress-route.yaml\napiVersion: traefik.containo.us/v1alpha1 kind: IngressRoute metadata: name: app #radarr for example namespace: media annotations: kubernetes.io/ingress.class: traefik-external spec: entryPoints: - websecure routes: - match: Host(`movies.merox.cloud`) # change to your domain kind: Rule services: - name: app #radarr for example port: 80 - match: Host(`movies.merox.cloud`) # change to your domain kind: Rule services: - name: app #radarr for example port: 80 middlewares: - name: default-headers-media tls: secretName: mycert-tls # change to your cert name Apply with:\nkubectl apply -f app-ingress-route.yaml Don\u0026rsquo;t forget: You must create the host declared in your IngressRoute in your DNS server(s). Q\u0026amp;A # Q: Why use a ClusterIP service? A: Because we will be using Traefik as an ingress controller to expose it to the local network/internet with SSL/TLS certificates. Q: Can I download all manifest files from anywhere? A: SURE! The link is at the end of this page :) This concludes the necessary steps and configurations to deploy a resilient media server in a Kubernetes cluster successfully.\nManifest files # Just copy and deploy all you need in no time\nAll manifest files 🔗 ","date":"6 March 2024","externalUrl":null,"permalink":"/blog/kubernetes-media-server/","section":"","summary":"For a long time, I\u0026rsquo;ve been on the hunt for a comprehensive and well-crafted tutorial to deploy a media server on my Kubernetes cluster.  Let\u0026rsquo;s dive into Jellyfin, Radarr, Sonarr, Jackett, and qBittorrent.","title":"Deploying a Kubernetes-Based Media Server","type":"blog"},{"content":"","date":"6 March 2024","externalUrl":null,"permalink":"/categories/installation/","section":"Categories","summary":"","title":"Installation","type":"categories"},{"content":"","date":"6 March 2024","externalUrl":null,"permalink":"/categories/kubernetes/","section":"Categories","summary":"","title":"Kubernetes","type":"categories"},{"content":"","date":"6 March 2024","externalUrl":null,"permalink":"/tags/opensource/","section":"Tags","summary":"","title":"Opensource","type":"tags"},{"content":"","date":"6 March 2024","externalUrl":null,"permalink":"/tags/tutorial/","section":"Tags","summary":"","title":"Tutorial","type":"tags"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]